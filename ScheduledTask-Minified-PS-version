powershell -command "$ErrorActionPreference='SILENTLYCONTINUE';del \"%TEMP%\\log4j1.log\";del \"%TEMP%\\log4j2.log\";del \"%TEMP%\\log4j3.log\";$drives=get-wmiobject win32_volume|? {$_.DriveType-eq3}|% {(Get-Psdrive  $_.DriveLetter[0]).Name};$drives|Foreach {$command='dir /S /B {0}:\*.jar | findstr /v /i Windows | findstr /v /i Sophos | findstr /i /s /m /F:/ \"jndilookup.class\" >> \"%TEMP%\log4j1.log\"'-f$_,$Env:TEMP;cmd /c $command};$drives|Foreach {$command='dir /S /B {0}:\*.war | findstr /v /i Windows | findstr /v /i Sophos | findstr /i /s /m /F:/ \"jndilookup.class\" >> \"%TEMP%\log4j2.log\" '-f$_,$Env:TEMP;cmd /c $command};$drives|Foreach {$command='dir /S /B {0}:\*log4j*.dll | findstr /v /i Windows | findstr /v /i Sophos | findstr /i /s /m /F:/ \"jndilookup.class\" >> \"%TEMP%\log4j3.log\"'-f$_,$Env:TEMP;cmd /c $command};$drives|Foreach {$command='dir /S /B {0}:\*.ear | findstr /v /i Windows | findstr /v /i Sophos | findstr /i /s /m /F:/ \"jndilookup.class\" >> \"%TEMP%\log4j4.log\"'-f$_,$Env:TEMP;cmd /c $command};$jar=Get-Content -Path ($Env:TEMP + '\\log4j1.log');$war=Get-Content -Path ($Env:TEMP + '\\log4j2.log');$dll=Get-Content -Path ($Env:TEMP + '\\log4j3.log');$ear=Get-Content -Path ($Env:TEMP + '\log4j4.log');class GraylogMessage {[string] $short_message;[string] $full_message; [string] $source};if(($jar+$zip+$dll+$ear)-ne''){$Uri='http://{GRAYLOGIP:PORTNUMBER}/gelf';$Headers=@{'Content-Type'='application/json'};$Message=[GraylogMessage]::New();$Message.source=$Env:computername;$Message.short_message='log4j Found';$Message.full_message=($jar+$war+$dll+$ear);Invoke-WebRequest -Uri $Uri -Method POST -Headers $Headers -Body (ConvertTo-Json $Message)}else{$Uri='http://{GRAYLOGIP:PORTNUMBER}/gelf';$Headers=@{'Content-Type'='application/json'};$Message=[GraylogMessage]::New();$Message.source=$Env:computername;$Message.short_message='no log4j instances found';$Message.full_message=($jar+$war+$dll+$ear);Invoke-WebRequest -Uri $Uri -Method POST -Headers $Headers -Body (ConvertTo-Json $Message)}"